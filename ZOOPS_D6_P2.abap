REPORT ZOOPS_D6_P2.

********** DAY 6 PROGRAM 2 ****************

"""" REQ - WANT TO ASSING THE VALUES IN THE RUNTIME WITHOUT PASSING IT IN THE METHOD .TO SEE HOW TOO PASS PARAMETERS TO CONSTRUCTORS.


"""" TOPICS - 1) PARAMETERS TO CONSTRUCTORS.


"""" CONSTRUCTOR - IT IS ALSO A TYPE OF METHOD, BUT IT IS A SPECIAL METHOD, FOR NORMAL METHOD WE USE THE KEYWORD CALL METHOD FOR CALLING THE METHOD WHEREAS
""""               FOR CONSTRUCTOR IT WILL BE CALLED AUTOMATICALLY WHEN AN OBJECT IS CREATED.
""""               IN C++ AND JAVA IF THE CLASS NAME AND THE METHOD NAME IS SAME THEN WE CALL IT AS CONSTRUTOR.
""""               IN ABAP CONSTRUCTORS ARE CLASSIFIED INTO 2 TYPES INSTANCE CONSTUCTOR AND STATIC CONSTRUCTOR.
""""               INSTANCE CONSTRUCTOR NAME WILL ALWAYS BE CONSTRUCTOR.
""""               CONSTRUCTORS ARE ALWAYS DECLARED IN PUBLIC SECTION.
""""               INSTANCE CONSTRUCTOR WILL BE EXECUTED ONCE IN THE LIFETIME OF EACH OBJECT.
""""               NORMAL METHOD CAN CONTAIN 4 TYPES OF PARAMETERS (IMPORTING, EXPORTING, CHANGING, RETURNING), INSTANCE CONSTRUCTOR CAN CONTAIN ONLY IMPORTING PARAMETERS.
""""               WITHIN SAME CLASS WE CANNOT HAVE MORE THAT ONE INSTANCE CONSTRUCTOR AND ONE STATIC CONSTRUCTOR.
""""               WHEN DO WE GO FOR CONSTRUCTOR? - WHEN WE CREATE OBJECT WE WANT SOME INITIALIZATION TO TAKE PLACE.



"""" Q - WHEN DO WE GO FOR CONSTRUCTOR?
"""" A - WHEN WE WANT SOME INITIALIZATION OF VALUES TO TAKE PLACE BEFORE WE CREATE THE OBJECT.

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""" COPYING BELOW CODE FROM DAY 2 PROGRAM 1.


CLASS LCL_EMP DEFINITION.
  """" NOTE - THE SECTIONS SHOULD BE IN THE ORDER OF PUBLIC, PROTECTED AND PRIVATE.
    PUBLIC SECTION.
   METHODS : CONSTRUCTOR IMPORTING I_EMPNO TYPE I
                                   I_ENAME TYPE C
                                   I_DESIG TYPE C,

             GETEMP.

  PROTECTED SECTION.                     """" NOTE - GENERALLY WE DECLARE ATTRIBUTES AS PROTECTED OR PRIVATE WHILE METHODS AS PUBLIC.
  DATA: EMPNO TYPE I,                    """" INSTANCE ATTRIBUTES.
        ENAME(20) TYPE C,
        EMPDESIG(25) TYPE C.

  """" NOW FOR CREATING LOCAL METHOD THE STEPS ARE -
*******************************Declaration (Method prototype declaration) --> Inside Class definition
*******************************Implementation --> Inside Class Implementation
*******************************Calling --> outside class / inside other method implementation


 ENDCLASS.

CLASS LCL_EMP IMPLEMENTATION.

   """" NOTE - IF THERE IS 100 METHOD DEFINITION THEN THERE SHOULD ALSO BE 100 METHOD IMPLEMENTATION.

   """" THIS BELOW METHOD SHOULD BE EXCECUTED ONLY WHEN IT IS CALLED. IF YOU DON'T CALL THE SUBROUTINE IT WILL NOT BE EXECUTED. HENCE ITS NOT ABLE TO UNDERSTAND FROM WHERE IT HAS TO START THE PROGRAM EXECUTION.
   """" ITS LIKED FORM ENDFORM HENCE SAP IS NOT ABLE TO UNDERSTAND SINCE IT WAS CALLED BEFORE LIKE PERFORM IS ACTUALLY CALLED AFTER FORM AND ENDFORM

  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

   METHOD GETEMP.  """" NO
     WRITE : / EMPNO, ENAME, EMPDESIG. """ HERE WE DON'T NEED TO CREATE OBJECT FOR INSTANCE ATTRIBUTE- IF YOU OPEN AND CLOSE THE METHOD IT IS KNOWN AS NULL IMPLEMENTATION.TE SINCE ITS IN THE SAME CLASS AND NOT OUTSIDE.
   ENDMETHOD.


   METHOD CONSTRUCTOR.
     EMPNO = I_EMPNO.
     ENAME = I_ENAME.
     EMPDESIG = I_DESIG.

     WRITE :/ 'EMPLOYEE NAME:',EMPNO,'EMPLOYEE NAME:',ENAME,'EMPLOYEE DESIGNATION :',EMPDESIG.

   ENDMETHOD.


ENDCLASS.

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

START-OF-SELECTION.

PARAMETERS : P_EMPNO TYPE I,
             P_ENAME(20) TYPE C,
             P_DESIG(20) TYPE C.





FORMAT COLOR 1.
WRITE :/ 'FIRST OBJECT OB1...'.


DATA OB1 TYPE REF TO LCL_EMP.
CREATE OBJECT OB1
EXPORTING
  I_EMPNO = P_EMPNO
  I_ENAME = P_ENAME
  I_DESIG = P_DESIG.        """" NOTE - WE SHOULD NOT DIRECTLY CREATE THE OBJECT. BEFORE CREATING THE OBJECT FOR ANY CLASS WE SHOULD CHECK THE SIGNATURE OF THE OBJECT.


ULINE.
FORMAT COLOR OFF.


"""" NOTE - IF WE MAKE IMPORTING PARAMETERS AS OPTIONAL THEN WE DON'T NEED TO EXPORT ALL THE VALUES AFTER CREATING OBJECT.

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""" NOW KNOWING HOW TO WORK WITH STANDARD CLASSES.

"""" GO TO SE24-> CL_GUI_ALV_GRID -> BEPORE CREATING OBJECT CHECK IF THE CLASS IS PUBLIC OR NOT(PROPERTIES -> PUBLIC) -> CHECK WHEATER THE CLASS CONTAINS ANY INSTANCE CONSTRUCTORS
"""" METHODS -> FIND-> CONSTRUCTOR -> THE CHECK IF THE CONSTRUCTOR CONTAINS ANY MANDATORY PARAMETER -> NOW THIS CONTAINS A STRUCTURE (TYPE REF TO MEANS OBJECT OF ANOTHER CLASS) -> SO NEED TO CREATE OBJECT FOR ANOTHHER CLASS
""""            CL_GUI_CONTAINER -> CONTAINES MANDATORY PARAMETER CLSID(SO WHEN WE WOULD CREATE THE OBJECT WE MUST PASS THE VALUE FOR THAT PARTICULAR OBJECT).




"__________________________________________________________________________________________________________________________________________________
